Terminals unused in grammar

    OPENBRAC
    CLOSEBRAC
    DBS
    AMP
    PCENT


Grammar

    0 $accept: inicio $end

    1 inicio: statement

    2 statement: single_line_statement statement

    3 $@1: %empty

    4 statement: OPENCURLY $@1 statement CLOSECURLY
    5          | function_declaration statement
    6          | for statement
    7          | if statement
    8          | iteracao statement
    9          | variable_declaration SEMICOLON statement
   10          | %empty

   11 single_line_statement: return SEMICOLON
   12                      | assignment SEMICOLON
   13                      | write SEMICOLON
   14                      | writeln SEMICOLON
   15                      | read SEMICOLON
   16                      | conjuntoop SEMICOLON
   17                      | error SEMICOLON

   18 comparg: OPENPAR comparison CLOSEPAR
   19        | mathop

   20 comparison: NOT comparg
   21           | comparg AND comparg
   22           | comparg OR comparg
   23           | comparg GREATER comparg
   24           | comparg GE comparg
   25           | comparg LESS comparg
   26           | comparg LE comparg
   27           | comparg EQ comparg
   28           | comparg NEQ comparg

   29 read: READ OPENPAR ID CLOSEPAR

   30 write: WRITE OPENPAR mathop CLOSEPAR
   31      | WRITE OPENPAR STRING CLOSEPAR
   32      | WRITE OPENPAR CHAR CLOSEPAR

   33 writeln: WRITELN OPENPAR mathop CLOSEPAR
   34        | WRITELN OPENPAR STRING CLOSEPAR
   35        | WRITELN OPENPAR CHAR CLOSEPAR

   36 return: RETURN comparison
   37       | RETURN mathop
   38       | RETURN

   39 $@2: %empty

   40 for: FOR OPENPAR assignment SEMICOLON comparison SEMICOLON assignment CLOSEPAR $@2 OPENCURLY statement CLOSECURLY

   41 $@3: %empty

   42 if: IF OPENPAR comparison CLOSEPAR OPENCURLY $@3 statement CLOSECURLY else
   43   | IF OPENPAR comparison CLOSEPAR single_line_statement else

   44 $@4: %empty

   45 if: IF OPENPAR error CLOSEPAR OPENCURLY $@4 statement CLOSECURLY else
   46   | IF OPENPAR error CLOSEPAR single_line_statement else

   47 else: ELSE if
   48     | ELSE single_line_statement

   49 $@5: %empty

   50 else: ELSE OPENCURLY $@5 statement CLOSECURLY
   51     | %empty

   52 conjuntoop: pertinencia
   53           | tipagem
   54           | inclusao
   55           | remocao
   56           | selecao

   57 conjuntoop1: pertinencia
   58            | tipagem
   59            | inclusao
   60            | remocao
   61            | selecao
   62            | ID

   63 pertinencia: mathop IN conjuntoop1
   64            | selecao IN conjuntoop1

   65 tipagem: IS_SET OPENPAR conjuntoop1 CLOSEPAR

   66 inclusao: ADD OPENPAR pertinencia CLOSEPAR

   67 remocao: REMOVE OPENPAR pertinencia CLOSEPAR

   68 selecao: EXISTS OPENPAR pertinencia CLOSEPAR

   69 $@6: %empty

   70 iteracao: FORALL OPENPAR pertinencia CLOSEPAR OPENCURLY $@6 statement CLOSECURLY
   71         | FORALL OPENPAR pertinencia CLOSEPAR single_line_statement

   72 $@7: %empty

   73 iteracao: FORALL OPENPAR error CLOSEPAR OPENCURLY $@7 statement CLOSECURLY
   74         | FORALL OPENPAR error CLOSEPAR single_line_statement

   75 function_call: ID OPENPAR args CLOSEPAR
   76              | ID OPENPAR CLOSEPAR

   77 args: mathop args1
   78     | error args1

   79 args1: COMMA args
   80      | %empty

   81 funcargs: type ID
   82         | type ID COMMA funcargs
   83         | %empty
   84         | error

   85 $@8: %empty

   86 function_declaration: type ID $@8 OPENPAR funcargs CLOSEPAR OPENCURLY statement CLOSECURLY

   87 $@9: %empty

   88 function_declaration: VOID ID $@9 OPENPAR funcargs CLOSEPAR OPENCURLY statement CLOSECURLY

   89 assignment: ID ASSIGN mathop

   90 variable_declaration: type ID
   91                     | type error

   92 mathop: mathop PLUS mathop1
   93       | mathop MINUS mathop1
   94       | mathop1

   95 mathop1: mathop1 AST mathop2
   96        | mathop1 BS mathop2
   97        | mathop2

   98 mathop2: matharg
   99        | OPENPAR mathop CLOSEPAR

  100 matharg: ID
  101        | num
  102        | function_call
  103        | EMPTY

  104 type: SET
  105     | INT
  106     | ELEM
  107     | FLOAT

  108 num: INTEGER
  109    | FLOATING


Terminals, with rules where they appear

    $end (0) 0
    error (256) 17 45 46 73 74 78 84 91
    INTEGER <text> (258) 108
    FLOATING <text> (259) 109
    STRING <text> (260) 31 34
    EMPTY <text> (261) 103
    CHAR <text> (262) 32 35
    ID <text> (263) 29 62 75 76 81 82 86 88 89 90 100
    INT <text> (264) 105
    FLOAT <text> (265) 107
    ELEM <text> (266) 106
    SET <text> (267) 104
    IF <text> (268) 42 43 45 46
    ELSE <text> (269) 47 48 50
    FOR <text> (270) 40
    READ <text> (271) 29
    WRITE <text> (272) 30 31 32
    WRITELN <text> (273) 33 34 35
    IN <text> (274) 63 64
    IS_SET <text> (275) 65
    ADD <text> (276) 66
    REMOVE <text> (277) 67
    EXISTS <text> (278) 68
    FORALL <text> (279) 70 71 73 74
    RETURN <text> (280) 36 37 38
    OPENPAR <text> (281) 18 29 30 31 32 33 34 35 40 42 43 45 46 65 66 67 68 70 71 73 74 75 76 86 88 99
    CLOSEPAR <text> (282) 18 29 30 31 32 33 34 35 40 42 43 45 46 65 66 67 68 70 71 73 74 75 76 86 88 99
    OPENCURLY <text> (283) 4 40 42 45 50 70 73 86 88
    CLOSECURLY <text> (284) 4 40 42 45 50 70 73 86 88
    OPENBRAC <text> (285)
    CLOSEBRAC <text> (286)
    LESS <text> (287) 25
    LE <text> (288) 26
    EQ <text> (289) 27
    NEQ <text> (290) 28
    GREATER <text> (291) 23
    GE <text> (292) 24
    PLUS <text> (293) 92
    MINUS <text> (294) 93
    DBS <text> (295)
    AST <text> (296) 95
    BS <text> (297) 96
    ASSIGN <text> (298) 89
    COMMA <text> (299) 79 82
    SEMICOLON <text> (300) 9 11 12 13 14 15 16 17 40
    OR <text> (301) 22
    AND <text> (302) 21
    NOT <text> (303) 20
    AMP <text> (304)
    PCENT <text> (305)
    VOID <text> (306) 88


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    inicio (53)
        on left: 1
        on right: 0
    statement <node> (54)
        on left: 2 4 5 6 7 8 9 10
        on right: 1 2 4 5 6 7 8 9 40 42 45 50 70 73 86 88
    $@1 (55)
        on left: 3
        on right: 4
    single_line_statement <node> (56)
        on left: 11 12 13 14 15 16 17
        on right: 2 43 46 48 71 74
    comparg <node> (57)
        on left: 18 19
        on right: 20 21 22 23 24 25 26 27 28
    comparison <node> (58)
        on left: 20 21 22 23 24 25 26 27 28
        on right: 18 36 40 42 43
    read <node> (59)
        on left: 29
        on right: 15
    write <node> (60)
        on left: 30 31 32
        on right: 13
    writeln <node> (61)
        on left: 33 34 35
        on right: 14
    return <node> (62)
        on left: 36 37 38
        on right: 11
    for <node> (63)
        on left: 40
        on right: 6
    $@2 (64)
        on left: 39
        on right: 40
    if <node> (65)
        on left: 42 43 45 46
        on right: 7 47
    $@3 (66)
        on left: 41
        on right: 42
    $@4 (67)
        on left: 44
        on right: 45
    else <node> (68)
        on left: 47 48 50 51
        on right: 42 43 45 46
    $@5 (69)
        on left: 49
        on right: 50
    conjuntoop <node> (70)
        on left: 52 53 54 55 56
        on right: 16
    conjuntoop1 <node> (71)
        on left: 57 58 59 60 61 62
        on right: 63 64 65
    pertinencia <node> (72)
        on left: 63 64
        on right: 52 57 66 67 68 70 71
    tipagem <node> (73)
        on left: 65
        on right: 53 58
    inclusao <node> (74)
        on left: 66
        on right: 54 59
    remocao <node> (75)
        on left: 67
        on right: 55 60
    selecao <node> (76)
        on left: 68
        on right: 56 61 64
    iteracao <node> (77)
        on left: 70 71 73 74
        on right: 8
    $@6 (78)
        on left: 69
        on right: 70
    $@7 (79)
        on left: 72
        on right: 73
    function_call <node> (80)
        on left: 75 76
        on right: 102
    args <node> (81)
        on left: 77 78
        on right: 75 79
    args1 <node> (82)
        on left: 79 80
        on right: 77 78
    funcargs <node> (83)
        on left: 81 82 83 84
        on right: 82 86 88
    function_declaration <node> (84)
        on left: 86 88
        on right: 5
    $@8 (85)
        on left: 85
        on right: 86
    $@9 (86)
        on left: 87
        on right: 88
    assignment <node> (87)
        on left: 89
        on right: 12 40
    variable_declaration <node> (88)
        on left: 90 91
        on right: 9
    mathop <node> (89)
        on left: 92 93 94
        on right: 19 30 33 37 63 77 89 92 93 99
    mathop1 <node> (90)
        on left: 95 96 97
        on right: 92 93 94 95 96
    mathop2 <node> (91)
        on left: 98 99
        on right: 95 96 97
    matharg <node> (92)
        on left: 100 101 102 103
        on right: 98
    type <node> (93)
        on left: 104 105 106 107
        on right: 81 82 86 90 91
    num <node> (94)
        on left: 108 109
        on right: 101


State 0

    0 $accept: â€¢ inicio $end

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    $end  reduce using rule 10 (statement)

    inicio                 go to state 24
    statement              go to state 25
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 1

   17 single_line_statement: error â€¢ SEMICOLON

    SEMICOLON  shift, and go to state 50


State 2

  108 num: INTEGER â€¢

    $default  reduce using rule 108 (num)


State 3

  109 num: FLOATING â€¢

    $default  reduce using rule 109 (num)


State 4

  103 matharg: EMPTY â€¢

    $default  reduce using rule 103 (matharg)


State 5

   75 function_call: ID â€¢ OPENPAR args CLOSEPAR
   76              | ID â€¢ OPENPAR CLOSEPAR
   89 assignment: ID â€¢ ASSIGN mathop
  100 matharg: ID â€¢

    OPENPAR  shift, and go to state 51
    ASSIGN   shift, and go to state 52

    $default  reduce using rule 100 (matharg)


State 6

  105 type: INT â€¢

    $default  reduce using rule 105 (type)


State 7

  107 type: FLOAT â€¢

    $default  reduce using rule 107 (type)


State 8

  106 type: ELEM â€¢

    $default  reduce using rule 106 (type)


State 9

  104 type: SET â€¢

    $default  reduce using rule 104 (type)


State 10

   42 if: IF â€¢ OPENPAR comparison CLOSEPAR OPENCURLY $@3 statement CLOSECURLY else
   43   | IF â€¢ OPENPAR comparison CLOSEPAR single_line_statement else
   45   | IF â€¢ OPENPAR error CLOSEPAR OPENCURLY $@4 statement CLOSECURLY else
   46   | IF â€¢ OPENPAR error CLOSEPAR single_line_statement else

    OPENPAR  shift, and go to state 53


State 11

   40 for: FOR â€¢ OPENPAR assignment SEMICOLON comparison SEMICOLON assignment CLOSEPAR $@2 OPENCURLY statement CLOSECURLY

    OPENPAR  shift, and go to state 54


State 12

   29 read: READ â€¢ OPENPAR ID CLOSEPAR

    OPENPAR  shift, and go to state 55


State 13

   30 write: WRITE â€¢ OPENPAR mathop CLOSEPAR
   31      | WRITE â€¢ OPENPAR STRING CLOSEPAR
   32      | WRITE â€¢ OPENPAR CHAR CLOSEPAR

    OPENPAR  shift, and go to state 56


State 14

   33 writeln: WRITELN â€¢ OPENPAR mathop CLOSEPAR
   34        | WRITELN â€¢ OPENPAR STRING CLOSEPAR
   35        | WRITELN â€¢ OPENPAR CHAR CLOSEPAR

    OPENPAR  shift, and go to state 57


State 15

   65 tipagem: IS_SET â€¢ OPENPAR conjuntoop1 CLOSEPAR

    OPENPAR  shift, and go to state 58


State 16

   66 inclusao: ADD â€¢ OPENPAR pertinencia CLOSEPAR

    OPENPAR  shift, and go to state 59


State 17

   67 remocao: REMOVE â€¢ OPENPAR pertinencia CLOSEPAR

    OPENPAR  shift, and go to state 60


State 18

   68 selecao: EXISTS â€¢ OPENPAR pertinencia CLOSEPAR

    OPENPAR  shift, and go to state 61


State 19

   70 iteracao: FORALL â€¢ OPENPAR pertinencia CLOSEPAR OPENCURLY $@6 statement CLOSECURLY
   71         | FORALL â€¢ OPENPAR pertinencia CLOSEPAR single_line_statement
   73         | FORALL â€¢ OPENPAR error CLOSEPAR OPENCURLY $@7 statement CLOSECURLY
   74         | FORALL â€¢ OPENPAR error CLOSEPAR single_line_statement

    OPENPAR  shift, and go to state 62


State 20

   36 return: RETURN â€¢ comparison
   37       | RETURN â€¢ mathop
   38       | RETURN â€¢

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64
    NOT       shift, and go to state 65

    $default  reduce using rule 38 (return)

    comparg        go to state 66
    comparison     go to state 67
    function_call  go to state 40
    mathop         go to state 68
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 21

   99 mathop2: OPENPAR â€¢ mathop CLOSEPAR

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 21

    function_call  go to state 40
    mathop         go to state 69
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 22

    4 statement: OPENCURLY â€¢ $@1 statement CLOSECURLY

    $default  reduce using rule 3 ($@1)

    $@1  go to state 70


State 23

   88 function_declaration: VOID â€¢ ID $@9 OPENPAR funcargs CLOSEPAR OPENCURLY statement CLOSECURLY

    ID  shift, and go to state 71


State 24

    0 $accept: inicio â€¢ $end

    $end  shift, and go to state 72


State 25

    1 inicio: statement â€¢

    $default  reduce using rule 1 (inicio)


State 26

    2 statement: single_line_statement â€¢ statement

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    $end        reduce using rule 10 (statement)
    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 73
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 27

   15 single_line_statement: read â€¢ SEMICOLON

    SEMICOLON  shift, and go to state 74


State 28

   13 single_line_statement: write â€¢ SEMICOLON

    SEMICOLON  shift, and go to state 75


State 29

   14 single_line_statement: writeln â€¢ SEMICOLON

    SEMICOLON  shift, and go to state 76


State 30

   11 single_line_statement: return â€¢ SEMICOLON

    SEMICOLON  shift, and go to state 77


State 31

    6 statement: for â€¢ statement

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    $end        reduce using rule 10 (statement)
    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 78
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 32

    7 statement: if â€¢ statement

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    $end        reduce using rule 10 (statement)
    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 79
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 33

   16 single_line_statement: conjuntoop â€¢ SEMICOLON

    SEMICOLON  shift, and go to state 80


State 34

   52 conjuntoop: pertinencia â€¢

    $default  reduce using rule 52 (conjuntoop)


State 35

   53 conjuntoop: tipagem â€¢

    $default  reduce using rule 53 (conjuntoop)


State 36

   54 conjuntoop: inclusao â€¢

    $default  reduce using rule 54 (conjuntoop)


State 37

   55 conjuntoop: remocao â€¢

    $default  reduce using rule 55 (conjuntoop)


State 38

   56 conjuntoop: selecao â€¢
   64 pertinencia: selecao â€¢ IN conjuntoop1

    IN  shift, and go to state 81

    $default  reduce using rule 56 (conjuntoop)


State 39

    8 statement: iteracao â€¢ statement

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    $end        reduce using rule 10 (statement)
    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 82
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 40

  102 matharg: function_call â€¢

    $default  reduce using rule 102 (matharg)


State 41

    5 statement: function_declaration â€¢ statement

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    $end        reduce using rule 10 (statement)
    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 83
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 42

   12 single_line_statement: assignment â€¢ SEMICOLON

    SEMICOLON  shift, and go to state 84


State 43

    9 statement: variable_declaration â€¢ SEMICOLON statement

    SEMICOLON  shift, and go to state 85


State 44

   63 pertinencia: mathop â€¢ IN conjuntoop1
   92 mathop: mathop â€¢ PLUS mathop1
   93       | mathop â€¢ MINUS mathop1

    IN     shift, and go to state 86
    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88


State 45

   94 mathop: mathop1 â€¢
   95 mathop1: mathop1 â€¢ AST mathop2
   96        | mathop1 â€¢ BS mathop2

    AST  shift, and go to state 89
    BS   shift, and go to state 90

    $default  reduce using rule 94 (mathop)


State 46

   97 mathop1: mathop2 â€¢

    $default  reduce using rule 97 (mathop1)


State 47

   98 mathop2: matharg â€¢

    $default  reduce using rule 98 (mathop2)


State 48

   86 function_declaration: type â€¢ ID $@8 OPENPAR funcargs CLOSEPAR OPENCURLY statement CLOSECURLY
   90 variable_declaration: type â€¢ ID
   91                     | type â€¢ error

    error  shift, and go to state 91
    ID     shift, and go to state 92


State 49

  101 matharg: num â€¢

    $default  reduce using rule 101 (matharg)


State 50

   17 single_line_statement: error SEMICOLON â€¢

    $default  reduce using rule 17 (single_line_statement)


State 51

   75 function_call: ID OPENPAR â€¢ args CLOSEPAR
   76              | ID OPENPAR â€¢ CLOSEPAR

    error     shift, and go to state 93
    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 21
    CLOSEPAR  shift, and go to state 94

    function_call  go to state 40
    args           go to state 95
    mathop         go to state 96
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 52

   89 assignment: ID ASSIGN â€¢ mathop

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 21

    function_call  go to state 40
    mathop         go to state 97
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 53

   42 if: IF OPENPAR â€¢ comparison CLOSEPAR OPENCURLY $@3 statement CLOSECURLY else
   43   | IF OPENPAR â€¢ comparison CLOSEPAR single_line_statement else
   45   | IF OPENPAR â€¢ error CLOSEPAR OPENCURLY $@4 statement CLOSECURLY else
   46   | IF OPENPAR â€¢ error CLOSEPAR single_line_statement else

    error     shift, and go to state 98
    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64
    NOT       shift, and go to state 65

    comparg        go to state 66
    comparison     go to state 99
    function_call  go to state 40
    mathop         go to state 100
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 54

   40 for: FOR OPENPAR â€¢ assignment SEMICOLON comparison SEMICOLON assignment CLOSEPAR $@2 OPENCURLY statement CLOSECURLY

    ID  shift, and go to state 101

    assignment  go to state 102


State 55

   29 read: READ OPENPAR â€¢ ID CLOSEPAR

    ID  shift, and go to state 103


State 56

   30 write: WRITE OPENPAR â€¢ mathop CLOSEPAR
   31      | WRITE OPENPAR â€¢ STRING CLOSEPAR
   32      | WRITE OPENPAR â€¢ CHAR CLOSEPAR

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    STRING    shift, and go to state 104
    EMPTY     shift, and go to state 4
    CHAR      shift, and go to state 105
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 21

    function_call  go to state 40
    mathop         go to state 106
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 57

   33 writeln: WRITELN OPENPAR â€¢ mathop CLOSEPAR
   34        | WRITELN OPENPAR â€¢ STRING CLOSEPAR
   35        | WRITELN OPENPAR â€¢ CHAR CLOSEPAR

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    STRING    shift, and go to state 107
    EMPTY     shift, and go to state 4
    CHAR      shift, and go to state 108
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 21

    function_call  go to state 40
    mathop         go to state 109
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 58

   65 tipagem: IS_SET OPENPAR â€¢ conjuntoop1 CLOSEPAR

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 110
    IS_SET    shift, and go to state 15
    ADD       shift, and go to state 16
    REMOVE    shift, and go to state 17
    EXISTS    shift, and go to state 18
    OPENPAR   shift, and go to state 21

    conjuntoop1    go to state 111
    pertinencia    go to state 112
    tipagem        go to state 113
    inclusao       go to state 114
    remocao        go to state 115
    selecao        go to state 116
    function_call  go to state 40
    mathop         go to state 44
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 59

   66 inclusao: ADD OPENPAR â€¢ pertinencia CLOSEPAR

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    EXISTS    shift, and go to state 18
    OPENPAR   shift, and go to state 21

    pertinencia    go to state 117
    selecao        go to state 118
    function_call  go to state 40
    mathop         go to state 44
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 60

   67 remocao: REMOVE OPENPAR â€¢ pertinencia CLOSEPAR

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    EXISTS    shift, and go to state 18
    OPENPAR   shift, and go to state 21

    pertinencia    go to state 119
    selecao        go to state 118
    function_call  go to state 40
    mathop         go to state 44
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 61

   68 selecao: EXISTS OPENPAR â€¢ pertinencia CLOSEPAR

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    EXISTS    shift, and go to state 18
    OPENPAR   shift, and go to state 21

    pertinencia    go to state 120
    selecao        go to state 118
    function_call  go to state 40
    mathop         go to state 44
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 62

   70 iteracao: FORALL OPENPAR â€¢ pertinencia CLOSEPAR OPENCURLY $@6 statement CLOSECURLY
   71         | FORALL OPENPAR â€¢ pertinencia CLOSEPAR single_line_statement
   73         | FORALL OPENPAR â€¢ error CLOSEPAR OPENCURLY $@7 statement CLOSECURLY
   74         | FORALL OPENPAR â€¢ error CLOSEPAR single_line_statement

    error     shift, and go to state 121
    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    EXISTS    shift, and go to state 18
    OPENPAR   shift, and go to state 21

    pertinencia    go to state 122
    selecao        go to state 118
    function_call  go to state 40
    mathop         go to state 44
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 63

   75 function_call: ID â€¢ OPENPAR args CLOSEPAR
   76              | ID â€¢ OPENPAR CLOSEPAR
  100 matharg: ID â€¢

    OPENPAR  shift, and go to state 51

    $default  reduce using rule 100 (matharg)


State 64

   18 comparg: OPENPAR â€¢ comparison CLOSEPAR
   99 mathop2: OPENPAR â€¢ mathop CLOSEPAR

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64
    NOT       shift, and go to state 65

    comparg        go to state 66
    comparison     go to state 123
    function_call  go to state 40
    mathop         go to state 124
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 65

   20 comparison: NOT â€¢ comparg

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64

    comparg        go to state 125
    function_call  go to state 40
    mathop         go to state 100
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 66

   21 comparison: comparg â€¢ AND comparg
   22           | comparg â€¢ OR comparg
   23           | comparg â€¢ GREATER comparg
   24           | comparg â€¢ GE comparg
   25           | comparg â€¢ LESS comparg
   26           | comparg â€¢ LE comparg
   27           | comparg â€¢ EQ comparg
   28           | comparg â€¢ NEQ comparg

    LESS     shift, and go to state 126
    LE       shift, and go to state 127
    EQ       shift, and go to state 128
    NEQ      shift, and go to state 129
    GREATER  shift, and go to state 130
    GE       shift, and go to state 131
    OR       shift, and go to state 132
    AND      shift, and go to state 133


State 67

   36 return: RETURN comparison â€¢

    $default  reduce using rule 36 (return)


State 68

   19 comparg: mathop â€¢
   37 return: RETURN mathop â€¢
   92 mathop: mathop â€¢ PLUS mathop1
   93       | mathop â€¢ MINUS mathop1

    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88

    SEMICOLON  reduce using rule 37 (return)
    $default   reduce using rule 19 (comparg)


State 69

   92 mathop: mathop â€¢ PLUS mathop1
   93       | mathop â€¢ MINUS mathop1
   99 mathop2: OPENPAR mathop â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 134
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88


State 70

    4 statement: OPENCURLY $@1 â€¢ statement CLOSECURLY

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 135
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 71

   88 function_declaration: VOID ID â€¢ $@9 OPENPAR funcargs CLOSEPAR OPENCURLY statement CLOSECURLY

    $default  reduce using rule 87 ($@9)

    $@9  go to state 136


State 72

    0 $accept: inicio $end â€¢

    $default  accept


State 73

    2 statement: single_line_statement statement â€¢

    $default  reduce using rule 2 (statement)


State 74

   15 single_line_statement: read SEMICOLON â€¢

    $default  reduce using rule 15 (single_line_statement)


State 75

   13 single_line_statement: write SEMICOLON â€¢

    $default  reduce using rule 13 (single_line_statement)


State 76

   14 single_line_statement: writeln SEMICOLON â€¢

    $default  reduce using rule 14 (single_line_statement)


State 77

   11 single_line_statement: return SEMICOLON â€¢

    $default  reduce using rule 11 (single_line_statement)


State 78

    6 statement: for statement â€¢

    $default  reduce using rule 6 (statement)


State 79

    7 statement: if statement â€¢

    $default  reduce using rule 7 (statement)


State 80

   16 single_line_statement: conjuntoop SEMICOLON â€¢

    $default  reduce using rule 16 (single_line_statement)


State 81

   64 pertinencia: selecao IN â€¢ conjuntoop1

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 110
    IS_SET    shift, and go to state 15
    ADD       shift, and go to state 16
    REMOVE    shift, and go to state 17
    EXISTS    shift, and go to state 18
    OPENPAR   shift, and go to state 21

    conjuntoop1    go to state 137
    pertinencia    go to state 112
    tipagem        go to state 113
    inclusao       go to state 114
    remocao        go to state 115
    selecao        go to state 116
    function_call  go to state 40
    mathop         go to state 44
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 82

    8 statement: iteracao statement â€¢

    $default  reduce using rule 8 (statement)


State 83

    5 statement: function_declaration statement â€¢

    $default  reduce using rule 5 (statement)


State 84

   12 single_line_statement: assignment SEMICOLON â€¢

    $default  reduce using rule 12 (single_line_statement)


State 85

    9 statement: variable_declaration SEMICOLON â€¢ statement

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    $end        reduce using rule 10 (statement)
    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 138
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 86

   63 pertinencia: mathop IN â€¢ conjuntoop1

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 110
    IS_SET    shift, and go to state 15
    ADD       shift, and go to state 16
    REMOVE    shift, and go to state 17
    EXISTS    shift, and go to state 18
    OPENPAR   shift, and go to state 21

    conjuntoop1    go to state 139
    pertinencia    go to state 112
    tipagem        go to state 113
    inclusao       go to state 114
    remocao        go to state 115
    selecao        go to state 116
    function_call  go to state 40
    mathop         go to state 44
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 87

   92 mathop: mathop PLUS â€¢ mathop1

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 21

    function_call  go to state 40
    mathop1        go to state 140
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 88

   93 mathop: mathop MINUS â€¢ mathop1

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 21

    function_call  go to state 40
    mathop1        go to state 141
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 89

   95 mathop1: mathop1 AST â€¢ mathop2

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 21

    function_call  go to state 40
    mathop2        go to state 142
    matharg        go to state 47
    num            go to state 49


State 90

   96 mathop1: mathop1 BS â€¢ mathop2

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 21

    function_call  go to state 40
    mathop2        go to state 143
    matharg        go to state 47
    num            go to state 49


State 91

   91 variable_declaration: type error â€¢

    $default  reduce using rule 91 (variable_declaration)


State 92

   86 function_declaration: type ID â€¢ $@8 OPENPAR funcargs CLOSEPAR OPENCURLY statement CLOSECURLY
   90 variable_declaration: type ID â€¢

    SEMICOLON  reduce using rule 90 (variable_declaration)
    $default   reduce using rule 85 ($@8)

    $@8  go to state 144


State 93

   78 args: error â€¢ args1

    COMMA  shift, and go to state 145

    $default  reduce using rule 80 (args1)

    args1  go to state 146


State 94

   76 function_call: ID OPENPAR CLOSEPAR â€¢

    $default  reduce using rule 76 (function_call)


State 95

   75 function_call: ID OPENPAR args â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 147


State 96

   77 args: mathop â€¢ args1
   92 mathop: mathop â€¢ PLUS mathop1
   93       | mathop â€¢ MINUS mathop1

    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88
    COMMA  shift, and go to state 145

    $default  reduce using rule 80 (args1)

    args1  go to state 148


State 97

   89 assignment: ID ASSIGN mathop â€¢
   92 mathop: mathop â€¢ PLUS mathop1
   93       | mathop â€¢ MINUS mathop1

    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88

    $default  reduce using rule 89 (assignment)


State 98

   45 if: IF OPENPAR error â€¢ CLOSEPAR OPENCURLY $@4 statement CLOSECURLY else
   46   | IF OPENPAR error â€¢ CLOSEPAR single_line_statement else

    CLOSEPAR  shift, and go to state 149


State 99

   42 if: IF OPENPAR comparison â€¢ CLOSEPAR OPENCURLY $@3 statement CLOSECURLY else
   43   | IF OPENPAR comparison â€¢ CLOSEPAR single_line_statement else

    CLOSEPAR  shift, and go to state 150


State 100

   19 comparg: mathop â€¢
   92 mathop: mathop â€¢ PLUS mathop1
   93       | mathop â€¢ MINUS mathop1

    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88

    $default  reduce using rule 19 (comparg)


State 101

   89 assignment: ID â€¢ ASSIGN mathop

    ASSIGN  shift, and go to state 52


State 102

   40 for: FOR OPENPAR assignment â€¢ SEMICOLON comparison SEMICOLON assignment CLOSEPAR $@2 OPENCURLY statement CLOSECURLY

    SEMICOLON  shift, and go to state 151


State 103

   29 read: READ OPENPAR ID â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 152


State 104

   31 write: WRITE OPENPAR STRING â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 153


State 105

   32 write: WRITE OPENPAR CHAR â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 154


State 106

   30 write: WRITE OPENPAR mathop â€¢ CLOSEPAR
   92 mathop: mathop â€¢ PLUS mathop1
   93       | mathop â€¢ MINUS mathop1

    CLOSEPAR  shift, and go to state 155
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88


State 107

   34 writeln: WRITELN OPENPAR STRING â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 156


State 108

   35 writeln: WRITELN OPENPAR CHAR â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 157


State 109

   33 writeln: WRITELN OPENPAR mathop â€¢ CLOSEPAR
   92 mathop: mathop â€¢ PLUS mathop1
   93       | mathop â€¢ MINUS mathop1

    CLOSEPAR  shift, and go to state 158
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88


State 110

   62 conjuntoop1: ID â€¢
   75 function_call: ID â€¢ OPENPAR args CLOSEPAR
   76              | ID â€¢ OPENPAR CLOSEPAR
  100 matharg: ID â€¢

    OPENPAR  shift, and go to state 51

    CLOSEPAR   reduce using rule 62 (conjuntoop1)
    SEMICOLON  reduce using rule 62 (conjuntoop1)
    $default   reduce using rule 100 (matharg)


State 111

   65 tipagem: IS_SET OPENPAR conjuntoop1 â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 159


State 112

   57 conjuntoop1: pertinencia â€¢

    $default  reduce using rule 57 (conjuntoop1)


State 113

   58 conjuntoop1: tipagem â€¢

    $default  reduce using rule 58 (conjuntoop1)


State 114

   59 conjuntoop1: inclusao â€¢

    $default  reduce using rule 59 (conjuntoop1)


State 115

   60 conjuntoop1: remocao â€¢

    $default  reduce using rule 60 (conjuntoop1)


State 116

   61 conjuntoop1: selecao â€¢
   64 pertinencia: selecao â€¢ IN conjuntoop1

    IN  shift, and go to state 81

    $default  reduce using rule 61 (conjuntoop1)


State 117

   66 inclusao: ADD OPENPAR pertinencia â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 160


State 118

   64 pertinencia: selecao â€¢ IN conjuntoop1

    IN  shift, and go to state 81


State 119

   67 remocao: REMOVE OPENPAR pertinencia â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 161


State 120

   68 selecao: EXISTS OPENPAR pertinencia â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 162


State 121

   73 iteracao: FORALL OPENPAR error â€¢ CLOSEPAR OPENCURLY $@7 statement CLOSECURLY
   74         | FORALL OPENPAR error â€¢ CLOSEPAR single_line_statement

    CLOSEPAR  shift, and go to state 163


State 122

   70 iteracao: FORALL OPENPAR pertinencia â€¢ CLOSEPAR OPENCURLY $@6 statement CLOSECURLY
   71         | FORALL OPENPAR pertinencia â€¢ CLOSEPAR single_line_statement

    CLOSEPAR  shift, and go to state 164


State 123

   18 comparg: OPENPAR comparison â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 165


State 124

   19 comparg: mathop â€¢
   92 mathop: mathop â€¢ PLUS mathop1
   93       | mathop â€¢ MINUS mathop1
   99 mathop2: OPENPAR mathop â€¢ CLOSEPAR

    CLOSEPAR  shift, and go to state 134
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88

    $default  reduce using rule 19 (comparg)


State 125

   20 comparison: NOT comparg â€¢

    $default  reduce using rule 20 (comparison)


State 126

   25 comparison: comparg LESS â€¢ comparg

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64

    comparg        go to state 166
    function_call  go to state 40
    mathop         go to state 100
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 127

   26 comparison: comparg LE â€¢ comparg

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64

    comparg        go to state 167
    function_call  go to state 40
    mathop         go to state 100
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 128

   27 comparison: comparg EQ â€¢ comparg

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64

    comparg        go to state 168
    function_call  go to state 40
    mathop         go to state 100
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 129

   28 comparison: comparg NEQ â€¢ comparg

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64

    comparg        go to state 169
    function_call  go to state 40
    mathop         go to state 100
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 130

   23 comparison: comparg GREATER â€¢ comparg

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64

    comparg        go to state 170
    function_call  go to state 40
    mathop         go to state 100
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 131

   24 comparison: comparg GE â€¢ comparg

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64

    comparg        go to state 171
    function_call  go to state 40
    mathop         go to state 100
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 132

   22 comparison: comparg OR â€¢ comparg

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64

    comparg        go to state 172
    function_call  go to state 40
    mathop         go to state 100
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 133

   21 comparison: comparg AND â€¢ comparg

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64

    comparg        go to state 173
    function_call  go to state 40
    mathop         go to state 100
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 134

   99 mathop2: OPENPAR mathop CLOSEPAR â€¢

    $default  reduce using rule 99 (mathop2)


State 135

    4 statement: OPENCURLY $@1 statement â€¢ CLOSECURLY

    CLOSECURLY  shift, and go to state 174


State 136

   88 function_declaration: VOID ID $@9 â€¢ OPENPAR funcargs CLOSEPAR OPENCURLY statement CLOSECURLY

    OPENPAR  shift, and go to state 175


State 137

   64 pertinencia: selecao IN conjuntoop1 â€¢

    $default  reduce using rule 64 (pertinencia)


State 138

    9 statement: variable_declaration SEMICOLON statement â€¢

    $default  reduce using rule 9 (statement)


State 139

   63 pertinencia: mathop IN conjuntoop1 â€¢

    $default  reduce using rule 63 (pertinencia)


State 140

   92 mathop: mathop PLUS mathop1 â€¢
   95 mathop1: mathop1 â€¢ AST mathop2
   96        | mathop1 â€¢ BS mathop2

    AST  shift, and go to state 89
    BS   shift, and go to state 90

    $default  reduce using rule 92 (mathop)


State 141

   93 mathop: mathop MINUS mathop1 â€¢
   95 mathop1: mathop1 â€¢ AST mathop2
   96        | mathop1 â€¢ BS mathop2

    AST  shift, and go to state 89
    BS   shift, and go to state 90

    $default  reduce using rule 93 (mathop)


State 142

   95 mathop1: mathop1 AST mathop2 â€¢

    $default  reduce using rule 95 (mathop1)


State 143

   96 mathop1: mathop1 BS mathop2 â€¢

    $default  reduce using rule 96 (mathop1)


State 144

   86 function_declaration: type ID $@8 â€¢ OPENPAR funcargs CLOSEPAR OPENCURLY statement CLOSECURLY

    OPENPAR  shift, and go to state 176


State 145

   79 args1: COMMA â€¢ args

    error     shift, and go to state 93
    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 21

    function_call  go to state 40
    args           go to state 177
    mathop         go to state 96
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 146

   78 args: error args1 â€¢

    $default  reduce using rule 78 (args)


State 147

   75 function_call: ID OPENPAR args CLOSEPAR â€¢

    $default  reduce using rule 75 (function_call)


State 148

   77 args: mathop args1 â€¢

    $default  reduce using rule 77 (args)


State 149

   45 if: IF OPENPAR error CLOSEPAR â€¢ OPENCURLY $@4 statement CLOSECURLY else
   46   | IF OPENPAR error CLOSEPAR â€¢ single_line_statement else

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 178

    single_line_statement  go to state 179
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    function_call          go to state 40
    assignment             go to state 42
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    num                    go to state 49


State 150

   42 if: IF OPENPAR comparison CLOSEPAR â€¢ OPENCURLY $@3 statement CLOSECURLY else
   43   | IF OPENPAR comparison CLOSEPAR â€¢ single_line_statement else

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 180

    single_line_statement  go to state 181
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    function_call          go to state 40
    assignment             go to state 42
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    num                    go to state 49


State 151

   40 for: FOR OPENPAR assignment SEMICOLON â€¢ comparison SEMICOLON assignment CLOSEPAR $@2 OPENCURLY statement CLOSECURLY

    INTEGER   shift, and go to state 2
    FLOATING  shift, and go to state 3
    EMPTY     shift, and go to state 4
    ID        shift, and go to state 63
    OPENPAR   shift, and go to state 64
    NOT       shift, and go to state 65

    comparg        go to state 66
    comparison     go to state 182
    function_call  go to state 40
    mathop         go to state 100
    mathop1        go to state 45
    mathop2        go to state 46
    matharg        go to state 47
    num            go to state 49


State 152

   29 read: READ OPENPAR ID CLOSEPAR â€¢

    $default  reduce using rule 29 (read)


State 153

   31 write: WRITE OPENPAR STRING CLOSEPAR â€¢

    $default  reduce using rule 31 (write)


State 154

   32 write: WRITE OPENPAR CHAR CLOSEPAR â€¢

    $default  reduce using rule 32 (write)


State 155

   30 write: WRITE OPENPAR mathop CLOSEPAR â€¢

    $default  reduce using rule 30 (write)


State 156

   34 writeln: WRITELN OPENPAR STRING CLOSEPAR â€¢

    $default  reduce using rule 34 (writeln)


State 157

   35 writeln: WRITELN OPENPAR CHAR CLOSEPAR â€¢

    $default  reduce using rule 35 (writeln)


State 158

   33 writeln: WRITELN OPENPAR mathop CLOSEPAR â€¢

    $default  reduce using rule 33 (writeln)


State 159

   65 tipagem: IS_SET OPENPAR conjuntoop1 CLOSEPAR â€¢

    $default  reduce using rule 65 (tipagem)


State 160

   66 inclusao: ADD OPENPAR pertinencia CLOSEPAR â€¢

    $default  reduce using rule 66 (inclusao)


State 161

   67 remocao: REMOVE OPENPAR pertinencia CLOSEPAR â€¢

    $default  reduce using rule 67 (remocao)


State 162

   68 selecao: EXISTS OPENPAR pertinencia CLOSEPAR â€¢

    $default  reduce using rule 68 (selecao)


State 163

   73 iteracao: FORALL OPENPAR error CLOSEPAR â€¢ OPENCURLY $@7 statement CLOSECURLY
   74         | FORALL OPENPAR error CLOSEPAR â€¢ single_line_statement

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 183

    single_line_statement  go to state 184
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    function_call          go to state 40
    assignment             go to state 42
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    num                    go to state 49


State 164

   70 iteracao: FORALL OPENPAR pertinencia CLOSEPAR â€¢ OPENCURLY $@6 statement CLOSECURLY
   71         | FORALL OPENPAR pertinencia CLOSEPAR â€¢ single_line_statement

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 185

    single_line_statement  go to state 186
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    function_call          go to state 40
    assignment             go to state 42
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    num                    go to state 49


State 165

   18 comparg: OPENPAR comparison CLOSEPAR â€¢

    $default  reduce using rule 18 (comparg)


State 166

   25 comparison: comparg LESS comparg â€¢

    $default  reduce using rule 25 (comparison)


State 167

   26 comparison: comparg LE comparg â€¢

    $default  reduce using rule 26 (comparison)


State 168

   27 comparison: comparg EQ comparg â€¢

    $default  reduce using rule 27 (comparison)


State 169

   28 comparison: comparg NEQ comparg â€¢

    $default  reduce using rule 28 (comparison)


State 170

   23 comparison: comparg GREATER comparg â€¢

    $default  reduce using rule 23 (comparison)


State 171

   24 comparison: comparg GE comparg â€¢

    $default  reduce using rule 24 (comparison)


State 172

   22 comparison: comparg OR comparg â€¢

    $default  reduce using rule 22 (comparison)


State 173

   21 comparison: comparg AND comparg â€¢

    $default  reduce using rule 21 (comparison)


State 174

    4 statement: OPENCURLY $@1 statement CLOSECURLY â€¢

    $default  reduce using rule 4 (statement)


State 175

   88 function_declaration: VOID ID $@9 OPENPAR â€¢ funcargs CLOSEPAR OPENCURLY statement CLOSECURLY

    error  shift, and go to state 187
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    ELEM   shift, and go to state 8
    SET    shift, and go to state 9

    CLOSEPAR  reduce using rule 83 (funcargs)

    funcargs  go to state 188
    type      go to state 189


State 176

   86 function_declaration: type ID $@8 OPENPAR â€¢ funcargs CLOSEPAR OPENCURLY statement CLOSECURLY

    error  shift, and go to state 187
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    ELEM   shift, and go to state 8
    SET    shift, and go to state 9

    CLOSEPAR  reduce using rule 83 (funcargs)

    funcargs  go to state 190
    type      go to state 189


State 177

   79 args1: COMMA args â€¢

    $default  reduce using rule 79 (args1)


State 178

   45 if: IF OPENPAR error CLOSEPAR OPENCURLY â€¢ $@4 statement CLOSECURLY else

    $default  reduce using rule 44 ($@4)

    $@4  go to state 191


State 179

   46 if: IF OPENPAR error CLOSEPAR single_line_statement â€¢ else

    ELSE  shift, and go to state 192

    $default  reduce using rule 51 (else)

    else  go to state 193


State 180

   42 if: IF OPENPAR comparison CLOSEPAR OPENCURLY â€¢ $@3 statement CLOSECURLY else

    $default  reduce using rule 41 ($@3)

    $@3  go to state 194


State 181

   43 if: IF OPENPAR comparison CLOSEPAR single_line_statement â€¢ else

    ELSE  shift, and go to state 192

    $default  reduce using rule 51 (else)

    else  go to state 195


State 182

   40 for: FOR OPENPAR assignment SEMICOLON comparison â€¢ SEMICOLON assignment CLOSEPAR $@2 OPENCURLY statement CLOSECURLY

    SEMICOLON  shift, and go to state 196


State 183

   73 iteracao: FORALL OPENPAR error CLOSEPAR OPENCURLY â€¢ $@7 statement CLOSECURLY

    $default  reduce using rule 72 ($@7)

    $@7  go to state 197


State 184

   74 iteracao: FORALL OPENPAR error CLOSEPAR single_line_statement â€¢

    $default  reduce using rule 74 (iteracao)


State 185

   70 iteracao: FORALL OPENPAR pertinencia CLOSEPAR OPENCURLY â€¢ $@6 statement CLOSECURLY

    $default  reduce using rule 69 ($@6)

    $@6  go to state 198


State 186

   71 iteracao: FORALL OPENPAR pertinencia CLOSEPAR single_line_statement â€¢

    $default  reduce using rule 71 (iteracao)


State 187

   84 funcargs: error â€¢

    $default  reduce using rule 84 (funcargs)


State 188

   88 function_declaration: VOID ID $@9 OPENPAR funcargs â€¢ CLOSEPAR OPENCURLY statement CLOSECURLY

    CLOSEPAR  shift, and go to state 199


State 189

   81 funcargs: type â€¢ ID
   82         | type â€¢ ID COMMA funcargs

    ID  shift, and go to state 200


State 190

   86 function_declaration: type ID $@8 OPENPAR funcargs â€¢ CLOSEPAR OPENCURLY statement CLOSECURLY

    CLOSEPAR  shift, and go to state 201


State 191

   45 if: IF OPENPAR error CLOSEPAR OPENCURLY $@4 â€¢ statement CLOSECURLY else

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 202
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 192

   47 else: ELSE â€¢ if
   48     | ELSE â€¢ single_line_statement
   50     | ELSE â€¢ OPENCURLY $@5 statement CLOSECURLY

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    IF         shift, and go to state 10
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 203

    single_line_statement  go to state 204
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    if                     go to state 205
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    function_call          go to state 40
    assignment             go to state 42
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    num                    go to state 49


State 193

   46 if: IF OPENPAR error CLOSEPAR single_line_statement else â€¢

    $default  reduce using rule 46 (if)


State 194

   42 if: IF OPENPAR comparison CLOSEPAR OPENCURLY $@3 â€¢ statement CLOSECURLY else

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 206
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 195

   43 if: IF OPENPAR comparison CLOSEPAR single_line_statement else â€¢

    $default  reduce using rule 43 (if)


State 196

   40 for: FOR OPENPAR assignment SEMICOLON comparison SEMICOLON â€¢ assignment CLOSEPAR $@2 OPENCURLY statement CLOSECURLY

    ID  shift, and go to state 101

    assignment  go to state 207


State 197

   73 iteracao: FORALL OPENPAR error CLOSEPAR OPENCURLY $@7 â€¢ statement CLOSECURLY

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 208
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 198

   70 iteracao: FORALL OPENPAR pertinencia CLOSEPAR OPENCURLY $@6 â€¢ statement CLOSECURLY

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 209
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 199

   88 function_declaration: VOID ID $@9 OPENPAR funcargs CLOSEPAR â€¢ OPENCURLY statement CLOSECURLY

    OPENCURLY  shift, and go to state 210


State 200

   81 funcargs: type ID â€¢
   82         | type ID â€¢ COMMA funcargs

    COMMA  shift, and go to state 211

    $default  reduce using rule 81 (funcargs)


State 201

   86 function_declaration: type ID $@8 OPENPAR funcargs CLOSEPAR â€¢ OPENCURLY statement CLOSECURLY

    OPENCURLY  shift, and go to state 212


State 202

   45 if: IF OPENPAR error CLOSEPAR OPENCURLY $@4 statement â€¢ CLOSECURLY else

    CLOSECURLY  shift, and go to state 213


State 203

   50 else: ELSE OPENCURLY â€¢ $@5 statement CLOSECURLY

    $default  reduce using rule 49 ($@5)

    $@5  go to state 214


State 204

   48 else: ELSE single_line_statement â€¢

    $default  reduce using rule 48 (else)


State 205

   47 else: ELSE if â€¢

    $default  reduce using rule 47 (else)


State 206

   42 if: IF OPENPAR comparison CLOSEPAR OPENCURLY $@3 statement â€¢ CLOSECURLY else

    CLOSECURLY  shift, and go to state 215


State 207

   40 for: FOR OPENPAR assignment SEMICOLON comparison SEMICOLON assignment â€¢ CLOSEPAR $@2 OPENCURLY statement CLOSECURLY

    CLOSEPAR  shift, and go to state 216


State 208

   73 iteracao: FORALL OPENPAR error CLOSEPAR OPENCURLY $@7 statement â€¢ CLOSECURLY

    CLOSECURLY  shift, and go to state 217


State 209

   70 iteracao: FORALL OPENPAR pertinencia CLOSEPAR OPENCURLY $@6 statement â€¢ CLOSECURLY

    CLOSECURLY  shift, and go to state 218


State 210

   88 function_declaration: VOID ID $@9 OPENPAR funcargs CLOSEPAR OPENCURLY â€¢ statement CLOSECURLY

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 219
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 211

   82 funcargs: type ID COMMA â€¢ funcargs

    error  shift, and go to state 187
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    ELEM   shift, and go to state 8
    SET    shift, and go to state 9

    CLOSEPAR  reduce using rule 83 (funcargs)

    funcargs  go to state 220
    type      go to state 189


State 212

   86 function_declaration: type ID $@8 OPENPAR funcargs CLOSEPAR OPENCURLY â€¢ statement CLOSECURLY

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 221
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 213

   45 if: IF OPENPAR error CLOSEPAR OPENCURLY $@4 statement CLOSECURLY â€¢ else

    ELSE  shift, and go to state 192

    $default  reduce using rule 51 (else)

    else  go to state 222


State 214

   50 else: ELSE OPENCURLY $@5 â€¢ statement CLOSECURLY

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 223
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 215

   42 if: IF OPENPAR comparison CLOSEPAR OPENCURLY $@3 statement CLOSECURLY â€¢ else

    ELSE  shift, and go to state 192

    $default  reduce using rule 51 (else)

    else  go to state 224


State 216

   40 for: FOR OPENPAR assignment SEMICOLON comparison SEMICOLON assignment CLOSEPAR â€¢ $@2 OPENCURLY statement CLOSECURLY

    $default  reduce using rule 39 ($@2)

    $@2  go to state 225


State 217

   73 iteracao: FORALL OPENPAR error CLOSEPAR OPENCURLY $@7 statement CLOSECURLY â€¢

    $default  reduce using rule 73 (iteracao)


State 218

   70 iteracao: FORALL OPENPAR pertinencia CLOSEPAR OPENCURLY $@6 statement CLOSECURLY â€¢

    $default  reduce using rule 70 (iteracao)


State 219

   88 function_declaration: VOID ID $@9 OPENPAR funcargs CLOSEPAR OPENCURLY statement â€¢ CLOSECURLY

    CLOSECURLY  shift, and go to state 226


State 220

   82 funcargs: type ID COMMA funcargs â€¢

    $default  reduce using rule 82 (funcargs)


State 221

   86 function_declaration: type ID $@8 OPENPAR funcargs CLOSEPAR OPENCURLY statement â€¢ CLOSECURLY

    CLOSECURLY  shift, and go to state 227


State 222

   45 if: IF OPENPAR error CLOSEPAR OPENCURLY $@4 statement CLOSECURLY else â€¢

    $default  reduce using rule 45 (if)


State 223

   50 else: ELSE OPENCURLY $@5 statement â€¢ CLOSECURLY

    CLOSECURLY  shift, and go to state 228


State 224

   42 if: IF OPENPAR comparison CLOSEPAR OPENCURLY $@3 statement CLOSECURLY else â€¢

    $default  reduce using rule 42 (if)


State 225

   40 for: FOR OPENPAR assignment SEMICOLON comparison SEMICOLON assignment CLOSEPAR $@2 â€¢ OPENCURLY statement CLOSECURLY

    OPENCURLY  shift, and go to state 229


State 226

   88 function_declaration: VOID ID $@9 OPENPAR funcargs CLOSEPAR OPENCURLY statement CLOSECURLY â€¢

    $default  reduce using rule 88 (function_declaration)


State 227

   86 function_declaration: type ID $@8 OPENPAR funcargs CLOSEPAR OPENCURLY statement CLOSECURLY â€¢

    $default  reduce using rule 86 (function_declaration)


State 228

   50 else: ELSE OPENCURLY $@5 statement CLOSECURLY â€¢

    $default  reduce using rule 50 (else)


State 229

   40 for: FOR OPENPAR assignment SEMICOLON comparison SEMICOLON assignment CLOSEPAR $@2 OPENCURLY â€¢ statement CLOSECURLY

    error      shift, and go to state 1
    INTEGER    shift, and go to state 2
    FLOATING   shift, and go to state 3
    EMPTY      shift, and go to state 4
    ID         shift, and go to state 5
    INT        shift, and go to state 6
    FLOAT      shift, and go to state 7
    ELEM       shift, and go to state 8
    SET        shift, and go to state 9
    IF         shift, and go to state 10
    FOR        shift, and go to state 11
    READ       shift, and go to state 12
    WRITE      shift, and go to state 13
    WRITELN    shift, and go to state 14
    IS_SET     shift, and go to state 15
    ADD        shift, and go to state 16
    REMOVE     shift, and go to state 17
    EXISTS     shift, and go to state 18
    FORALL     shift, and go to state 19
    RETURN     shift, and go to state 20
    OPENPAR    shift, and go to state 21
    OPENCURLY  shift, and go to state 22
    VOID       shift, and go to state 23

    CLOSECURLY  reduce using rule 10 (statement)

    statement              go to state 230
    single_line_statement  go to state 26
    read                   go to state 27
    write                  go to state 28
    writeln                go to state 29
    return                 go to state 30
    for                    go to state 31
    if                     go to state 32
    conjuntoop             go to state 33
    pertinencia            go to state 34
    tipagem                go to state 35
    inclusao               go to state 36
    remocao                go to state 37
    selecao                go to state 38
    iteracao               go to state 39
    function_call          go to state 40
    function_declaration   go to state 41
    assignment             go to state 42
    variable_declaration   go to state 43
    mathop                 go to state 44
    mathop1                go to state 45
    mathop2                go to state 46
    matharg                go to state 47
    type                   go to state 48
    num                    go to state 49


State 230

   40 for: FOR OPENPAR assignment SEMICOLON comparison SEMICOLON assignment CLOSEPAR $@2 OPENCURLY statement â€¢ CLOSECURLY

    CLOSECURLY  shift, and go to state 231


State 231

   40 for: FOR OPENPAR assignment SEMICOLON comparison SEMICOLON assignment CLOSEPAR $@2 OPENCURLY statement CLOSECURLY â€¢

    $default  reduce using rule 40 (for)
